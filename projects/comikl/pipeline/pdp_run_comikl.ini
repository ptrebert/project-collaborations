; template for PiedPiper run configuration files

[Run]
load_path= /home/pebert/work/code/mpggit/collaborations/projects/comikl
load_name= pipeline.ppl_project_comikl

[Refdata]
basedir= /TL/deep/fhgfs/projects/pebert/thesis/refdata
chromreg= ${basedir}/chromsizes/chrom_augo/hs37d5_chrom_augo.bed
chromtab= ${basedir}/chromsizes/chrom_augo/hs37d5_chrom_augo.tsv
genome= ${basedir}/genomes/wg_2bit/hs37d5.2bit
genseq= ${basedir}/genomes/rawdata/hs37d5.fa
ocregions= ${EnvPaths:workdir}/rawdata/Intersection_ATAC_DNase_NOMe_HepG2_MACS.txt

[NucHunter]
javabase= java -XX:ParallelGCThreads=2 -jar
fitparams= ${javabase} /TL/epigenetics2/work/pebert/tools/NucHunter/NucHunter.jar fitpars
callnucs= ${javabase} /TL/epigenetics2/work/pebert/tools/NucHunter/NucHunter.jar callnucs -wrad 150

[Pipeline]
name= COMIKL
workdir= ${EnvPaths:workdir}

bamfilt= samtools view -b -f 2 -F 1536 -L ${Refdata:chromreg} -@ 8 -o {outputfile} {inputfile}
bammerge= samtools merge -r -l 9 -@ 8 {{outputfile}} {{inputfiles}}
bamidx= samtools index {inputfile} {outputfile}
nucfit= ${NucHunter:fitparams} -NT 8 -pName {SAMPLE[0]} -out {subpath[0][1]}/nucfit -in {{inputfile}} > /dev/null
nuccall= ${NucHunter:callnucs} -pName {prefix} -ctrl {control} {bamfiles} -out {outdir} -sigma {sigma}
mkflanks= bedtools flank -i {inputfile} -g ${Refdata:chromtab} -b 250 > {outputfile}
mkisect= bedtools intersect -u -f 0.33 -r -a {{inputfile1}} -b {{inputfile2}} > {{outputfile}} &&
 bedtools intersect -u -f 0.33 -r -a {{inputfile2}} -b {{inputfile1}} >> {{outputfile}} &&
 sort -V -k1,2 {{outputfile}} -o {{outputfile}}
mrgisect= bedtools merge -c 4,5 -o collapse -delim "@" -i {inputfile} > {outputfile}
isectovl= bedtools intersect -u -f 0.5 -a {{inputfile}} -b {subpath[0][0]}/Intersection_ATAC_DNase_NOMe_HepG2_MACS.flanking.bed > {{outputfile}}
isectnon= bedtools intersect -v -a {{inputfile}} -b {subpath[0][0]}/Intersection_ATAC_DNase_NOMe_HepG2_MACS.flanking.bed > {{outputfile}}
mkfasta= bedtools getfasta -fi ${Refdata:genseq} -name -bed {inputfile} -fo {outputfile}

[Ruffus]
use_threads= True
jobs= 25
verbose= 2
history_file= ${EnvPaths:ruffushist}/${Pipeline:name}_hist.sqlite
log_file= ${EnvPaths:ruffuslog}/${Pipeline:name}_ruffus.log

[JobConfig]
jobname= ${Pipeline:name}
workdir= ${EnvPaths:workdir}
outpath= ${EnvPaths:ruffusdump}
errpath= ${EnvPaths:ruffusdump}
native_spec= -l mem_free=5G,slots_free=2,tmp_free=5G
scriptdir= ${EnvPaths:ruffusdump}
keepscripts= 0

[ParallelJobConfig]
jobname= ${Pipeline:name}
workdir= ${EnvPaths:workdir}
outpath= ${EnvPaths:ruffusdump}
errpath= ${EnvPaths:ruffusdump}
native_spec= -l mem_free=15G,slots_free=8,tmp_free=5G
scriptdir= ${EnvPaths:ruffusdump}
keepscripts= 0

[MemJobConfig]
jobname= ${Pipeline:name}
workdir= ${EnvPaths:workdir}
outpath= ${EnvPaths:ruffusdump}
errpath= ${EnvPaths:ruffusdump}
native_spec= -l mem_free=10G,slots_free=2,tmp_free=5G
scriptdir= ${EnvPaths:ruffusdump}
keepscripts= 0
