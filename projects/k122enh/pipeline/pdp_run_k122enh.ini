; template for PiedPiper run configuration files

[Run]
load_path= /home/pebert/work/code/mpggit/collaborations/projects/k122enh
load_name= pipeline.ppl_project_k122enh

[Refdata]
basedir= /TL/deep/fhgfs/projects/pebert/thesis/refdata
chromreg= ${basedir}/chromsizes/chrom_augo/hs37d5_chrom_augo.bed
chromtab= ${basedir}/chromsizes/chrom_augo/hs37d5_chrom_augo.tsv
blacklist= ${basedir}/blacklists/merged/GRCh37_ngs_blacklist.mrg.bed
genome= ${basedir}/genomes/wg_2bit/hs37d5.2bit
genseq= ${basedir}/genomes/rawdata/hs37d5.fa
ocregions= ${EnvPaths:workdir}/rawdata/Intersection_ATAC_DNase_NOMe_HepG2_MACS.txt
cleanreg= ${EnvPaths:workdir}/grch37_filt_genome.bed


[NucHunter]
javabase= java -XX:ParallelGCThreads=2 -jar
fitparams= ${javabase} /TL/epigenetics2/work/pebert/tools/NucHunter/NucHunter.jar fitpars
callnucs= ${javabase} /TL/epigenetics2/work/pebert/tools/NucHunter/NucHunter.jar callnucs -wrad 150

[ReportFiles]
basedir= ${EnvPaths:workdir}/annotation
dnaser1= DNaseR1:${basedir}/ENCFF268DTI_hg19_HepG2_DNase-R2.bed
dnaser2= DNaseR2:${basedir}/ENCFF505SRS_hg19_HepG2_DNase-R1.bed
cage= CAGE:${basedir}/ENCFF318EPW_hg19_HepG2_Gencode-v19_CAGE.bed
kat2b= KAT2B:${basedir}/ENCFF465OJX_hg19_HepG2_KAT2B.bed
hdac2= HDAC2:${basedir}/ENCFF503AZK_hg19_HepG2_HDAC2.bed
foxa1= FOXA1:${basedir}/ENCFF675TLS_hg19_HepG2_FOXA1.bed
suz12= SUZ12:${basedir}/ENCFF933CNH_hg19_HepG2_SUZ12.bed
triopen= TriOpen:${basedir}/ATAC_DNase_NOMe_shared.bed
repfiles= -a ${dnaser1} -a ${dnaser2} -a ${cage} -a ${kat2b} -a ${hdac2} -a ${foxa1} -a ${suz12} -a ${triopen}

[Pipeline]
name= K122ENH
workdir= ${EnvPaths:workdir}

cleangenome= bedtools subtract -nonamecheck -a {{inputfile}} -b ${Refdata:blacklist} | sort -V -k 1,2 > {{outputfile}}
bamfilt= samtools view -b -f 2 -F 1536 -L ${Refdata:cleanreg} -@ 8 -o {outputfile} {inputfile}
countreads= echo "{inputfile}" > {outputfile} && samtools view -c {inputfile} >> {outputfile}
bammerge= samtools merge -r -l 9 -@ 8 {{outputfile}} {{inputfiles}}
bamsample= samtools view -h {fraction} {{inputfile}} | samtools sort -@ 8 -T {prefix} -o {{outputfile}} -m 2G -O BAM
bamidx= samtools index {inputfile} {outputfile}
nucfit= ${NucHunter:fitparams} -NT 8 -pName {SAMPLE[0]} -out {subpath[0][1]}/nuchunter/fit -in {{inputfile}} > /dev/null
nuccall= ${NucHunter:callnucs} -pName {prefix} -ctrl {control} {bamfiles} -out {outdir} -sigma {sigma}
epiccount= epicseg.R getcounts --regions ${Refdata:chromreg} --target {{outputfile}} {bamfiles}
 --pairedend TRUE --binsize 200 --nthreads 16
epicnorm= epicseg.R normalizecounts --counts {inputfile} --nthreads 16
epicseg= epicseg.R segment --nstates 13 --counts {{inputfile}} --regions {path[0]}/01_HepG2_LiHG.counts_refined_regions.bed
 --nthreads 16 --outdir {subpath[0][1]}/segment --prefix {SAMPLE[0]}_
; parameters for DNase peak calling follow suggestion by Anshul Kundaje found here:
; https://groups.google.com/d/msg/macs-announcement/4OCE59gkpKY/rSO5OQx0jr8J
dnasepeak= macs2 callpeak --verbose 0 --treatment {{inputfile}} --name {SAMPLE[0]} --outdir {subpath[0][1]}/macs2/peaks
 --gsize hs --qvalue 0.01 --nomodel --extsize 200 --shift -100 --keep-dup all --call-summits
epicrep= epicseg.R report --segments {{inputfile}} --model {subpath[0][1]}/epicseg/segment/01_HepG2_LiHG_model.txt
 --outdir {subpath[0][1]}/epicseg/report --prefix {SAMPLE[0]}_ -a Nucleosomes:{path[0]}/01_HepG2_LiHG.ncbi.bed
 -a DNase:{path[0]}/01_HepG2_LiHG_DNase_peaks.bed ${ReportFiles:repfiles} --colors {subpath[0][1]}/epicseg/epic_colors.txt

[Ruffus]
use_threads= True
jobs= 25
verbose= 2
history_file= ${EnvPaths:ruffushist}/${Pipeline:name}_hist.sqlite
log_file= ${EnvPaths:ruffuslog}/${Pipeline:name}_ruffus.log

[JobConfig]
jobname= ${Pipeline:name}
workdir= ${EnvPaths:workdir}
outpath= ${EnvPaths:ruffusdump}
errpath= ${EnvPaths:ruffusdump}
native_spec= -l mem_free=5G,slots_free=2,tmp_free=5G
scriptdir= ${EnvPaths:ruffusdump}
keepscripts= 0

[ParallelJobConfig]
jobname= ${Pipeline:name}
workdir= ${EnvPaths:workdir}
outpath= ${EnvPaths:ruffusdump}
errpath= ${EnvPaths:ruffusdump}
native_spec= -l mem_free=15G,slots_free=8,tmp_free=5G
scriptdir= ${EnvPaths:ruffusdump}
keepscripts= 0

[NodeJobConfig]
jobname= ${Pipeline:name}
workdir= ${EnvPaths:workdir}
outpath= ${EnvPaths:ruffusdump}
errpath= ${EnvPaths:ruffusdump}
native_spec= -l mem_free=25G,slots_free=16,tmp_free=10G
scriptdir= ${EnvPaths:ruffusdump}
keepscripts= 0

[MemJobConfig]
jobname= ${Pipeline:name}
workdir= ${EnvPaths:workdir}
outpath= ${EnvPaths:ruffusdump}
errpath= ${EnvPaths:ruffusdump}
native_spec= -l mem_free=10G,slots_free=2,tmp_free=5G
scriptdir= ${EnvPaths:ruffusdump}
keepscripts= 0
